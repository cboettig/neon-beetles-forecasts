---
title: "Beetles"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r}
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)
library(thematic)
thematic_rmd(bg="white", fg="black", accent="blue")

source("../../eco4cast/neon4cast-dashboard/R/plot-utils.R")


```

```{r include=FALSE, cache=TRUE}

forecast_files <- fs::dir_ls(glob="beetles*.csv.gz")
targets <-
  "https://data.ecoforecast.org/targets/beetles/beetles-targets.csv.gz" %>%
  read_csv(col_types = "cDdd")

scores <- map_dfr(forecast_files, function(f) {

  forecast <- read4cast::read_forecast(f) |> mutate(filename = f)
  score4cast::score(forecast, targets, "beetles")

})

combined <- scores
#combined <- combined_scores("beetles")
```


## Most recent forecasts

```{r}
min_data <- 5
day <- combined |>
  filter(!is.na(observed)) |>
  count(target_id, variable, model_id, pub_time, site_id) |>
#  filter(n >= min_data) |> 
  filter(pub_time == max(pub_time)) |> # must happen second
  select(pub_time) |> distinct(pub_time) |> first()

end <- Sys.Date() 

sites <- combined |> select(site_id) |> distinct() |> pull(site_id)
```




### richness


::: {.panel-tabset}

```{r}
richness <- combined |> 
  filter(pub_time == day, variable == "richness", time < end)
```

## Sites 1 - 8

```{r}
richness |>  filter(site_id %in% sites[1:8]) |> forecast_plots(ncol=4)
```

## Sites 9 - 16

```{r}
richness |> filter(site_id %in% sites[9:16]) |> forecast_plots(ncol=4)
```

## Sites 17 - 24

```{r}
richness |>  filter(site_id %in% sites[17:24]) |> forecast_plots(ncol=4)
```

## Sites 25 - 32

```{r}
richness |> filter(site_id %in% sites[25:32]) |> forecast_plots(ncol=4)
```



## Sites 33 - 40

```{r}
richness |>  filter(site_id %in% sites[33:40]) |> forecast_plots(ncol=4)
```

## Sites 41 - 47

```{r}
richness |> filter(site_id %in% sites[41:47]) |> forecast_plots(ncol=4)
```

:::






### abundance

::: {.panel-tabset}

```{r}
abundance <- combined |> 
  filter(pub_time == day, variable == "abundance", time < end)
```

## Sites 1 - 8

```{r}
abundance |>  filter(site_id %in% sites[1:8]) |> forecast_plots(ncol=4)
```

## Sites 9 - 16

```{r}
abundance |> filter(site_id %in% sites[9:16]) |> forecast_plots(ncol=4)
```

## Sites 17 - 24

```{r}
abundance |>  filter(site_id %in% sites[17:24]) |> forecast_plots(ncol=4)
```

## Sites 25 - 32

```{r}
abundance |> filter(site_id %in% sites[25:32]) |> forecast_plots(ncol=4)
```



## Sites 33 - 40

```{r}
abundance |>  filter(site_id %in% sites[33:40]) |> forecast_plots(ncol=4)
```

## Sites 41 - 47

```{r}
abundance |> filter(site_id %in% sites[41:47]) |> forecast_plots(ncol=4)
```

:::






```{r}
filled_scores <- fill_scores(combined, "cb_f1")
```

## Leaderboard

```{r}

leaderboard <-  filled_scores %>% 
  group_by(variable, model_id) %>%
  summarise(crps = mean(crps),
            logs = mean(logs, na.rm=TRUE)) 
```




::: {.panel-tabset}


## richness

```{r}
leaderboard_plots(leaderboard, NULL, "richness")

```

## abundance

```{r}
leaderboard_plots(leaderboard, NULL, "abundance")
```


:::
<!-- Consider adding site-by-site breakout on scores -->



